ZVSE2
; Author:   Archer30 & igrik
; Engine:   ERM 2.0+
; Requires: ERA 3.3+, Era Erm Framework, WoG Scripts (29 henchman & 53 map options)

!?FU(henchman_LangCheck);
!!UN:J8/1/^era rus.pac^;
!!VRi^henchman_lang^&1:S1;
!!UN:J8/5/^Archer - info.erm^;
!!VRi^henchman_lang^&1:S2;

; ============== PUBLIC ==============
; These settings should be configured in json or changed programmatically. Do not edit this file.
!#VRi^henchman_battleExpStatic^:S6;
!#VRi^henchman_battleExpRandom^:S4;
!#VRi^henchman_battleHeroExpCoef^:S0;
!#VRi^henchman_battleExpPerHeroLv^:S0;
!#VRi^henchman_battleExpMin^:S0;
!#VRi^henchman_battleExpMax^:S1000;
!#VRi^henchman_bonusHeroLvUp^:S10;
!#VRi^henchman_bonusDaily^:S1;
!#VRi^henchman_spellDmgPerPower^:S0;
!#VRi^henchman_knowledgeForSpell^:S0;
!#VRi^henchman_battleExpLossPct^:S100;

!#VRi^henchman_stackExpEnabled^:S(FALSE);
!#VRi^henchman_stackExpTroopMode^:S(FALSE);
!#VRi^henchman_bannerEnabled^:S(FALSE);
!#VRi^henchman_bannerFree^:S(FALSE);
!#VRi^henchman_returnToArmy^:S(FALSE);
!#VRi^henchman_altExpPerLv^:S(FALSE);
!#VRi^henchman_campaignTransfer^:S(FALSE);
!#VRi^henchman_moreSantaGuards^:S(FALSE);
!#VRi^henchman_reviveAnywhere^:S(FALSE);
; ============ END PUBLIC ============


!?FU(henchman_LoadGlobalConfig);
!!FU(LoadIntGlobalsFromJson):P^henchman.settings_%i(henchman_lang).^/^henchman_^/
  ^battleExpStatic^/^battleExpRandom^/^battleHeroExpCoef^/^battleHeroLvMult^/^battleExpMin^/^battleExpMax^/
  ^bonusHeroLvUp^/^bonusDaily^/^stackExpEnabled^/^stackExpTroopMode^/^bannerEnabled^/^bannerFree^/
  ^spellDmgPerPower^/^knowledgeForSpell^;

!!FU(LoadIntGlobalsFromJson):P^henchman.settings_%i(henchman_lang).^/^henchman_^/
  ^battleExpLossPct^/^returnToArmy^/^altExpPerLv^/^campaignTransfer^/^moreSantaGuards^/^reviveAnywhere^;

!!VRi^henchman_battleExpStatic^:F0/(INT_MAX);
!!VRi^henchman_battleExpRandom^:F0/(INT_MAX);
!!VRi^henchman_battleHeroExpCoef^:F0/(INT_MAX);
!!VRi^henchman_battleExpPerHeroLv^:F0/(INT_MAX);
!!VRi^henchman_battleExpMin^:F0/(HENCHMAN_EXP_MAX);
!!VRi^henchman_battleExpMax^:Fi^henchman_battleExpMin^/(HENCHMAN_EXP_MAX);
!!VRi^henchman_bonusHeroLvUp^:F0/(HENCHMAN_EXP_MAX);
!!VRi^henchman_bonusDaily^:F0/(HENCHMAN_EXP_MAX);
!!VRi^henchman_stackExpEnabled^:F(FALSE)/(TRUE);
!!VRi^henchman_stackExpTroopMode^:F(FALSE)/i^henchman_stackExpEnabled^; [force disabling stack exp troop mode if stack exp disabled]
!!VRi^henchman_bannerEnabled^:F(FALSE)/i^henchman_stackExpEnabled^; [force disabling banner if stack exp disabled]
!!VRi^henchman_bannerFree^:F(FALSE)/i^henchman_bannerEnabled^; [force disabling free banner if banner disabled]
!!VRi^henchman_spellDmgPerPower^:F0/(HENCHMAN_SPELL_MAX);
!!VRi^henchman_knowledgeForSpell^:F0/(HENCHMAN_SPELL_MAX);
!!VRi^henchman_battleExpLossPct^:F0/(HENCHMAN_PCT_MAX);
!!VRi^henchman_returnToArmy^:F(FALSE)/(TRUE);
!!VRi^henchman_altExpPerLv^:F(FALSE)/(TRUE);
!!VRi^henchman_campaignTransfer^:F(FALSE)/(TRUE);
!!VRi^henchman_moreSantaGuards^:F(FALSE)/(TRUE);
!!VRi^henchman_reviveAnywhere^:F(FALSE)/(TRUE);


*** End Archer's tricks ***

!#UN:P49/?i^henchman_on^;
!#VRv7181:Si^henchman_on^;
!#FU(henchman_LangCheck):P;
!#FU(henchman_LoadGlobalConfig):P;      [load config for banner initialization]

; w118 - есть ли оруженосец: (-1 нет) (другое: его номер)
; w119 - (0: мертв) (1: жив)

!?FU(OnTransferHero)&i^henchman_on^=(TRUE)/i^henchman_campaignTransfer^=(TRUE);
!#VA(hero:x);
!!FU(henchman_Load):P(hero);

!?FU(OnAfterErmInstructions);
!!FU(henchman_Initialization):P;
!!FU(henchman_BannerInitialization)&i^henchman_bannerEnabled^=(TRUE)/i^henchman_bannerFree^=(FALSE):P; [initialize banners when banner is not free]

!?FU(OnEveryDay)&i^henchman_on^=(TRUE);
!#VA(day:x) (weekDay:x) (once:x) (owner:x) (isAi:x);
!!FU(henchman_LangCheck)&(isAi)=(FALSE):P; [check for language for all human players]
!!FU(henchman_LoadGlobalConfig)&(once)=(TRUE)/(day)>1:P; [load settings daily]

!?FU(OnWinGame)&i^henchman_on^=(TRUE)/i^henchman_campaignTransfer^=(TRUE);
!!FU(henchman_Save):P;

!?CM2&i^henchman_on^=(TRUE)/999;        [КЛИК В ОКНЕ ГЕРОЯ]
!!CM:I?y3 F?y4 S?y5;                    [получаем параметры клика]
!!CM:H?y1/?y2;                          [получить номер героя]
!!HEy1&y1>-1:O?y30;                     [Archer - check owner]
!!if&y3=141/y4=512;                     [right click on flags for banner]
  *!if&i^henchman_bannerEnabled^=1;     [msg when banner enabled]
    !!SN:F^GetKeyState^/(KEY_CONTROL);
    !!VRy6:Sv1&65535;                   [2-bytes WORD]
    !!FU(henchman_RMBMenu)&y6<32768/y30>-1:Py1; [check the higher bit]
    !!IF&y6>=32768:Q2/-1/-1/1/z149000;  [msg of Ctrl + right click]
  *!el;                                 [msg when banner disabled]
    *!IF:Q2/-1/-1/1/z149000;
  *!en;
!!en;
!!FU|y3<>141/y4<>0/y5<>12:E;            [при других случаях - выход]
!!IF&y1>-1:Wy1;                         [переход к переменной героя]
!!if&w118>-1;                           [fix double dialog when dismiss]
  !!FU7106:Py1/y30;                     [if: показ окна оруженосца героя y1]
!!el;
  !!FU7102&w118<0/y30>-1:P;             [else: предложение выбрать оруженосца]
!!en;
!!UN:R3/-1;                             [обновить экран героя]

!?OB98&i^henchman_on^=(TRUE);           [ПОСЕЩЕНИЕ ГОРОДА]
!!OW:I-1/?y2;                           [цвет игрока]
!!CA998&y2=0:O?y4;                      [цвет хозяина города]
!!HE-1&y2=0:N?y1 O?y3;                  [номер героя и его цвет]
!!IF&y2=0/y1>-1:Wy1;                    [инициализация w переменной]
!!FU7108&y2=0/w118>-1/w119=0/y3=y4:Py1; [если оруженосец мертв, то предложение его воскресить]

!?FU(WOG_PreBeforeBattle)&i^henchman_on^=(TRUE); !!FU7109:P; [СТАРТ БИТВЫ: перед триггером BA]

!?BF&i^henchman_on^=(TRUE);             [ПРИ НАСТРОЙКЕ ПАРАМЕТРОВ БИТВЫ]
!!VRv7207:C-1/-1/-1/-1/-1/-1;           ["обнулили" переменные v7207-v7212]
!!VRy-1:S-2;                            ["обнулили" y-2]
!!BU:E2/?y-7;                           [занята ли позиция 2 (такая вот проверка на банк существ)]
!!BA:H0/?y-1;                           [номер атакующего героя]
!!HEy-1&y-1>-1:O?y-3;                   [хозяин атакующего героя]
!!OW:Iy-3/?y-6;  !!VRy-6:S0;            [получить контроллер (человек или ИИ)]
!!VRy-8&y-7<21:S20;                     [позиция в обычной битве]
!!VRy-8&y-7>20:S25;                     [позиция в банке существ]
!!HEy-1&y-1>-1:E?y1/?y3;
!!SN:W^heroExpBefore_0^/y1;             [Archer - left hero exp before battle]
!!VRi^heroBefore_0^:Sy-1;               [left hero id before battle]
!!if&y-6=0;                             [если контроллер - человек]
  !!IF&y-1>-1:Wy-1;                     [инициализация w переменной героя]
  !!BU&w118>-1/w119=1/y-1>-1:Sw118/1/y-8/0/-1/0; [поставить оруженосца]
  !!BU&w118>-1/w119=1/y-1>-1:Ey-8/?v7207;[запомнить id стека в v7207]
  !!FU7101&w118>-1/w119=1/y-1>-1/v7207>-1:Pv7207/0/y-1;  [настроить его параметры]
  !!FU(henchman_StackExpBF)&w118>-1/w119=1/y-1>-1/v7207>-1/i^henchman_stackExpEnabled^=1:Pv7207/0/y-1; [Archer - set up stack experince]
!!en;
!!BA:H1/?y-2;                           [номер защищающегося героя]
!!HEy-2&y-2>-1:O?y-3;                   [хозяин защищающегося героя]
!!OW:Iy-3/?y-6;  !!VRy-6:S0;            [получить контроллер (человек или ИИ)]
!!HEy-2&y-2>-1:E?y2/?y4;
!!SN&y-2>-1:W^heroExpBefore_1^/y2;      [right hero exp before battle]
!!VRi^heroExpBefore_1^&y-2<0:S0;        [0 exp if no hero]
!!VRi^heroBefore_1^&y-2>-1:Sy-2;        [right hero id before battle]
!!VRi^heroBefore_1^&y-2<0:S-1;          [-1 if no hero]
!!if&y-6=0;                             [если контроллер - человек]
  !!IF&y-2>-1:Wy-2;                     [инициализация w переменной героя]
  !!BU&w118>-1/w119=1/y-2>-1:Sw118/1/30/1/-1/0; [поставить оруженосца]
  !!BU&w118>-1/w119=1/y-2>-1:E30/?v7208;[запомнить id стека в v7208]
  !!FU7101&w118>-1/w119=1/y-2>-1/v7208>-1:Pv7208/1/y-2; [настроить его параметры]
  !!FU(henchman_StackExpBF)&w118>-1/w119=1/y-1>-1/v7208>-1/i^henchman_stackExpEnabled^=1:Pv7208/1/y-2; [Archer - set up stack experince]
!!en;

!?FU(henchman_hassantaguards);
!!SN:L^amethyst2_4.dll^/?y1;
!!SN&y1<>0:Ay1/^_hasSantaGuards^/?y2;
!!VRx2:S0; !!FU&x1<0:E;
!!if|y1=0/y2=0:;
  !!VRx2&x1=(MON_SANTA_GREMLIN):S1;
  !!FU:E;
!!en;
!!SN:Ey2/1/x1;
!!VRx2:Sv1;


!?FU(OnBattleRound)&v997=0/i^henchman_on^=(TRUE);
!!FU(henchman_LvCalculation):P0;
!!FU(henchman_LvCalculation):P1;
!!if&i^henchman_moreSantaGuards^=(TRUE);
  !!BMv7207&v7207>-1:T?(henchLeft:y);  !!FU(henchman_hassantaguards):P(henchLeft)/?(santaLeft:y);
  !!BMv7208&v7208>-1:T?(henchRight:y); !!FU(henchman_hassantaguards):P(henchRight)/?(santaRight:y);
  !!FU(henchman_SantaGuards)&(santaLeft)<>0/i^henchmanLevel_0^>1:P0/v7207;
  !!FU(henchman_SantaGuards)&(santaRight)<>0/i^henchmanLevel_1^>1:P1/v7208;
!!en;
!!if&i^henchman_knowledgeForSpell^>0;   [set extra spells for henchman]
  !!BMv7207&v7207>(NO_STACK):E?(spellLeft:y);
  !!BMv7208&v7208>(NO_STACK):E?(spellRight:y);
  !!if&v7207>(NO_STACK)/(spellLeft)>0;
    !!HEi^heroBefore_0^:F?(atk:y)/?(def:y)/?(pwr:y)/?(knwLeft:y); [get knowledge of left hero]
    !!VR(spellLeftNew:y):S(knwLeft) :i^henchman_knowledgeForSpell^ +(spellLeft);
    !!BMv7207:E(spellLeftNew);
  !!en;
  !!if&v7208>(NO_STACK)/(spellRight)>0;
    !!HEi^heroBefore_0^:F?(atk:y)/?(def:y)/?(pwr:y)/?(knwRight:y); [get knowledge of right hero]
    !!VR(spellRightNew:y):S(knwRight) :i^henchman_knowledgeForSpell^ +(spellRight);
    !!BMv7208:E(spellRightNew);
  !!en;
!!en;

!?BG0&i^henchman_on^=(TRUE);
!!BMv7207&v7207>-1:N?v7211;
!!BMv7208&v7208>-1:N?v7212;
!!BG&v7207=v7210/v7211=0:A3;
!!BG&v7208=v7210/v7212=0:A3;

!?BG1&i^henchman_on^=(TRUE);
!!BG:N?v7210;                           [v7210 - id активного стека]
!!if&v7207>-1;                          [v7207 - id стека атакующего оруженосца]
  !!BMv7207:N?y-2 T?y-3;
  !!BMv7207&y-2=0:K100000000;           [защита от воскрешения оруженсца в бою]
  !!FU7107&y-2=0:P0/0;
  !!BMv7207&y-2>v7211/y-3<>159:Nv7213 L0;
  !!FU7107&y-2>v7211/y-3<>159:P0/1;
  !!BU&y-2=0/y-3<>159:R;
  !!IF:V1/0;
!!en;
!!if&v7208>-1;                          [v7208 - id стека защищающегося оруженосца]
  !!BMv7208:N?y-2 T?y-3;
  !!BMv7208&y-2=0:K100000000;           [защита от воскрешения оруженсца в бою]
  !!FU7107&y-2=0:P1/0;
  !!BMv7208&y-2>v7212/y-3<>159:Nv7214 L0;
  !!FU7107&y-2>v7212/y-3<>159:P1/1;
  !!BU&y-2=0/y-3<>159:R;
  !!IF:V1/0;
!!en;

!?FU(OnMagicCorrectedResistance)&i^henchman_on^=(TRUE)&i^henchman_spellDmgPerPower^>0; [WIP work in progress]
!!BG:N?(stack:y);                       [get stack id]
!!BG:A?(monAction:y);                   [get monster action]
!!FU&(stack)<>v7207/(stack)<>v7208:E;   [exit if not henchman]
!!FU&(monAction)<>10:E;                 [exit if not monster casting]
!!VR(side:y)&(stack)=v7207:S0;
!!VR(side:y)&(stack)=v7208:S1;
!!MR:F?(dmgFix:y);
!!HEi^heroBefore_%(side)^:F?(atk:y)/?(def:y)/?(pwr:y)/?(knw:y); [get power of hero]
!!VR(herobefore:y):Si^heroBefore_%(side)^;
!!VR(dmgNew:y):S(pwr) *i^henchman_spellDmgPerPower^ +(dmgFix);
!!MR:F(dmgNew);

!?FU7100;
!!HE-1:C0/x16/?y1/?y2;
!!if&y1>-1/y1<>160/y1<>161/y1<>162/y1<>163; [Archer - emissaries can't be henchman]
  !!UN&x16=0:N3/2/y1/0;
  !!UN&x16=1:N3/3/y1/0;
  !!UN&x16=2:N3/4/y1/0;
  !!UN&x16=3:N3/5/y1/0;
  !!UN&x16=4:N3/6/y1/0;
  !!UN&x16=5:N3/7/y1/0;
  !!UN&x16=6:N3/8/y1/0;
!!en;

!?FU7101;
!!BMx1:T?y6;
!!FU7104&y6>-1:Py6;
!!VRy7&y6>-1:Sv7215;
!!IF&y6>-1:Wx3;
!!HEx3:E?y1/?y2/1;
!!VRy9:Sc -1 *i^henchman_bonusDaily^;
!!VRy10:Sy2 -1 *i^henchman_bonusHeroLvUp^ +w117 +y9; [Archer - bonus exp multiplier]
!!VRv7213&x2=0/y6>-1:Sy10 :y7 +1;
!!VRv7214&x2=1/y6>-1:Sy10 :y7 +1;

!!BH0:N?y60;
!!BH1:N?y61;

!!VRy8&x2=0/y6>-1:Sv7213;
!!VRy8&x2=1/y6>-1:Sv7214;

!!IF:Wx3;

!!if&y6>-1;
  !!MA:Sy6/?y50;
  !!VRy4:Sy10:50+100;
  !!VRy5:Sy10:1000;
  !!VRy60:Sy50+y5*y4:100-y50;
  !!BMx1:Sdy60;

  !!VRy99:Sy10*100:y7+100;

  !!BMx1:U1/d1 U1/?y50 U2/d2 U2/?y51;
  !!VRy50:*y99:100;
  !!VRy51:*y99:100;
  !!BMx1:U1/y50 U2/y51;

  !!VRy4:Sy10:25+100;
  !!VRy5:Sy10:250;
  !!MA:Ay6/?y50 Dy6/?y51;
  !!VRy60:Sy50+y5*y4:100-y50;
  !!VRy61:Sy51+y5*y4:100-y51;
  !!BMx1:Ady60 Ddy61;

  !!BMx1:H?y4;
  !!VRy5:Sy4 *y99:100 + 50;
  !!BMx1:Hy5;
  !!BMx1:N1 B1;
  !!BMx1:M4/100/1 G4/0/1;
  !!FU7113:Px1;
!!en;
!!UN:P218/?y1;
!!FU&y1<>1:E;
!!VRy3:S0;
!!VRy4:S0;
!!BH0:N?y1;
!!BH1:N?y2;
!!HEy1&y1>=0:S19/?y3;
!!HEy2&y2>=0:S19/?y4;
!!FU&y3=0/y4=0:E;
!!FU&y3=y4:E;
!!FU&y3<y4/x2=0:E;
!!FU&y3>y4/x2=1:E;
!!VRy5&y3>y4/x2=0:S0 +y3 -y4;
!!VRy5&y3<y4/x2=1:S0 +y4 -y3;
!!BMx1&y6>-1:Sdy5;

!?FU7102;
!!VRz1:Sz149002;
!!VRz2:S^^;
!!VRz3:S^^;
!!VRz4:S^^;
!!VRz5:S^^;
!!VRz6:S^^;
!!VRz7:S^^;
!!VRz8:S^^;
!!HE-1:N?y3;
!!IF:Wy3;
!!VRz9&w118>-1:Sz149003;                [Archer - don't display DIMISS HENCHMAN if no henchman]
!!VRz9&w118<0:S^^;
!!VRz10:Sz149004;
!!FU(henchman_LastCreatureCheck):Py3/?y30; [forbid the last creature as henchman if heroes without army is disabled]
!!IF&1000/y30=1:G1/1/256/1/0/0/0/0/0/0/0/9/10;
!!DO7100/0/6/1&y30<>1:P2;
!!IF&1000/y30<>1:G1/1/256/1/2/3/4/5/6/7/8/9/10;
!!VRy2&v1=1:S0;
!!VRy2&v1=2:S1;
!!VRy2&v1=4:S2;
!!VRy2&v1=8:S3;
!!VRy2&v1=16:S4;
!!VRy2&v1=32:S5;
!!VRy2&v1=64:S6;
!!FU&v1=256:E;
!!HEy3:S3/?y-5;                    [get hero id and level of Scouting]
!!HEy3&v1<128:C0/y2/?y1/?y-2;           [check for quantity (y-2)]
!!EXy3/y2:R?y-3/?y-4 A?y-7/?y-8/?y-1;   [check for banner (y-3) and stack exp (y-1)]
!!HEy3&v1<128/y-2=1/y-3=156:A156;
!!HEy3&v1<128:C0/y2/?y1/d-1;
!!VRy4:Si^henchman_battleExpLossPct^ *w117 :100;
!!VRw117&v1<128/y-5<2|v1=128:-y4;       [Archer - battle exp loss percentage]
!!if&i^henchman_stackExpEnabled^=1;
  !!VRi^henchman_stackExp_%y3^&v1=128:S0;[zero stack exp if dismiss henchman]
  !!if&i^henchman_stackExpTroopMode^=1/v1<128;
    !!VRy-6:Si^henchman_stackExp_%y3^;  [y-6 = previous henchman stack exp]
    !!VRi^henchman_stackExp_%y3^:Sy-1;  [transfer stack exp from original creature if stack exp transfer enabeld]
  !!en;
!!en;
!!if|y-5>1/i^henchman_returnToArmy^=1;  [return henchman to the army if expert scouting or return option on]
  !!VRy6&i^henchman_stackExpTroopMode^=1:Sy-6; [y6 = stack exp for henchman return to the army]
  !!VRy6&i^henchman_stackExpTroopMode^<>1:S0;
  !!HE-1&v1<128/w118>=0/w119>0:C2/w118/1/1/y6/0;[mode 0, return henchman with stack exp if alive]
!!en;
!!VRw118&v1<128:Sy1;
!!VRw118&v1=128:S-2;
!!VRw119&v1<128:S1;

!?FU7103;
!!IF:Wx1;
!!VRy1:S0;
!!HEx1&y1<7:C0/y1/?y2/?y3;
!!VRy2&y1>6:S0 R199;
!!VRy2&y1>6/y2>=132/y2<=135:S0 R173;
!!VRy2&y1>6/y2>=150/y2<=158:S0 R173;
!!VRy2&y1>6/y2>=145/y2<=149:S0 R131;
!!VRy2&y1>6/y2>=160/y2<=163:S0 R131;
!!VRy2&y1>6/y2=122:S192;
!!VRy2&y1>6/y2=124:S193;
!!VRy2&y1>6/y2=126:S194;
!!VRy2&y1>6/y2=128:S195;
!!VRy2&y1>6/y2>173:S-1;
!!HEx1&y2>-1:E?y6/?y7/1;
!!VRy4&y2>-1:S25 R10 *y7;
!!VRw118&y2>-1:Sy2;
!!VRw117&y2>-1/w118>-1/y4>w117:Sy4;
!!VRw119&y2>-1:S1;
!!VRw119&y2=-1:S0;

!?FU7104;
!#VA(mon:x);
!!MA:F(mon)/?(value:y);
!!if&(value)<13;
  !!MA:I(mon)/?(ai:y);
  !!VR(value)&(ai)>=13:S(ai);
  !!VR(value)&(ai)<13:S650;
!!en;
!!VRv7215&i^henchman_altExpPerLv^=(FALSE):S(value)*8:100;
!!if&i^henchman_altExpPerLv^=(TRUE);    [Archer - alternative exp of leveling up]
  !!VR(valueFloat:e):S(value);
  !!FU(Sqrt):P(valueFloat)/?(scaleValueFloat:e);
  !!VR(scaleValue:y):S(scaleValueFloat:e);
  !!VRv7215:S(scaleValue) *8 :10 *10;
!!en;
!!VRv7215&v7215<1:S10;

!?FU(henchman_Initialization);
!!re i/(HERO_FIRST)/(HERO_LAST_WOG);
  !!co&i^henchman_transferred_%i^=(TRUE);
  !!IF:Wi;
  !!VRw117:S0;
  !!VRw118:S(NO_MON);
!!en;

!?FU7106;
!!IF&x1>-1:Wx1;
!!VRz1:S^^;
!!if&i^henchman_stackExpEnabled^=1;     [Archer - stack exp and banner display]
  !!SN:E7503648/1/w118/i^henchman_stackExp_%x1^; [Hawaiing - rank]
  !!SN:T^henchman.strings_%i(henchman_lang).rank^/?z-1 Iz-1/?z-1;
  !!VRz1:+z-1;
  !!if&i^henchman_bannerEnabled^=1;
    !!SN:T^henchman.strings_%i(henchman_lang).banner^/?z-2;
    !!SN:T^henchman.strings_%i(henchman_lang).banner_%i(henchman_banner_%x1)^/?z-3 Iz-3/?z-3;
    !!VRz1:+z-2 +z-3;
  !!en;
  !!FU7104&w118>-1:Pw118;
  !!SN:T^henchman.strings_%i(henchman_lang).Newline^/?z2; [new line]
  !!VRz1:+z2;
!!en;
!!VRz1&w119=0:+z149005;
!!FU7104&w118>-1:Pw118;
!!VRy12:Sc -1 *i^henchman_bonusDaily^;
!!HEx1:E?y1/?y2/1;
!!VRy2:-1 *i^henchman_bonusHeroLvUp^ +y12; [bonus exp multiplier]
!!VRy11:Sw117 +y2;
!!VRy99:Sy11 * 100 :v7215 + 100;
!!VRy3:Sy11 :v7215 +1;

!!if&w118>-1;
  !!VRy4:Sy11 %v7215 -v7215 *-1;
  !!MA:Aw118/?y5;
  !!VRy60:Sy11:25+100;
  !!VRy61:Sy11:250;
  !!VRy5:+y61*y60:100;

  !!MA:Dw118/?y6;
  !!VRy60:Sy11:25+100;
  !!VRy61:Sy11:250;
  !!VRy6:+y61*y60:100;

  !!MA:Pw118/?y1;
  !!VRy7:Sy1  *y99:100+50;+10
  !!MA:Mw118/?y1;
  !!VRy8:Sy1+1  *y99:100;
  !!MA:Ew118/?y1;
  !!VRy9:Sy1+2  *y99:100;

  !!MA:Sw118/?y10;
  !!VRy60:Sy11:50+100;
  !!VRy61:Sy11:1000;
  !!VRy10:+y61*y60:100;
!!en;
!!if&x2>-1;                             [Archer - allow selection only when hero is with an owner]
  !!IF:Q2/21/w118/2/z149006;
  !!FU7102&2:P;
!!el;
  !!IF:Q2/21/w118/1/z149006;
!!en;

!?FU7107;
!!BA&x1=0:H0/?y1;
!!BA&x1=1:H1/?y1;
!!IF:Wy1;
!!VRw119:Sx2;

!?FU7108;                               [proposal to reserrect henchman]
!!IF&x1>-1:Wx1;
!!FU7104&w118>-1:Pw118;
!!HEx1:E?y6/?y7/1;
!!IF&x1>-1:Wx1;
!!VRy9:Sc -1 *i^henchman_bonusDaily^;
!!VRy10:Sy7 -1 *i^henchman_bonusHeroLvUp^ +w117 +y9; [Archer - bonus exp multiplier]
!!VRy3:Sy10 :v7215 +1;
!!MA:Cw118/6/?y8;
!!VRy4:Sy8 *y3 :5;
!!IF:Q2/21/w118/2/z149007;
!!OW:R-1/6/?y5;
!!VRy8&2/y5>=y4:Sy5 -y4;
!!OW&2/y5>=y4:R-1/6/y8;
!!VRw119&2/y5>=y4:S1;
!!IF&2/y5<y4:M1/z149008;

!?FU7109;
!!re i/0/1;
  !!BA:Hi/?y1;
  !!FU&i=1/y1<0:E;
  !!HEy1:O?y3;
  !!OW:Iy3/?y2;
  !!IF&y1>-1:Wy1;
  !!if&i=0/y1>-1/y2=0;
    !!FU(henchman_LastCreatureCheck):Py1/?y30; [Archer - forbid the last creature as henchman if heroes without army is disabled]
    !!co&y30=1;
    !!IF&w118=-1:Q2/10/y3/2/z149001;
    !!FU7102&2/w118=-1:P;
    !!VRw118&-2/w118=-1:S-2;
  !!el&y1>=1/y2=1;
    !!FU(henchman_LastCreatureCheck):Py1/?y30;
    !!co&y30=1;
    !!FU7111|w118<0/w119=0:Py1;         [AI: ищем кого сделать оруженосцем]
  !!en;
!!en;

!?FU7111;                               [AI: ИЩЕМ НОВОГО ОРУЖЕНОСЦА (стрелки в приоритете!)]
!!VRy5:S-1;                             [y5 = creature id]
!!VRy6:S-1;                             [y6 = slot]
!!VRy7:S-1;                             [y7 = shots]
!!VRy8:S-1;                             [y8 = fight value]
!!re i/0/6;
  !!VRy30:S0;                           [y30 = flag for no creature / special]
  !!HEx1:C0/i/?y1/?y2;
  !!VRy30|y1<0/y1=122/y1=124/y1=126/y1=128/y1=y5:S1; [no / same creature]
  !!VRy30&y1>=160/y1<=163:S1;           [emissaries]
  !!VRy30&y1>=145/y1<=149:S1;           [warmachines]
  !!VRy30&y1>=174/y1<=191:S1;           [commanders]
  !!co&y30=1;
  !!MA:Ny1/?y3 Fy1/?y4;
  !!if&y3>y7;                           [more shots]
    !!VRy5:Sy1;
    !!VRy6:Si;
    !!VRy7:Sy3;
    !!VRy8:Sy4;
  !!el&y3=y7/y4<y8;                     [same shots but less fight value]
    !!VRy5:Sy1;
    !!VRy6:Si;
    !!VRy7:Sy3;
    !!VRy8:Sy4;
  !!en;
!!en;
!!HEx1:C0/y6/?y1/d-1;
!!IF&x1>-1:Wx1;
!!VRw118:Sy1;
!!VRw119:S1;

; переигрываемая битва
; восстановление оруженосца
!?BA52&i^henchman_on^=(TRUE);
!!VRv7216:S0;
!!SN:W^henchmen_side_0^/0  W^henchmen_side_1^/0;
!!BA:H0/?y1 H1/?y2;
!!if&y1>-1;
  !!IF:Wy1;
  !!VRy3:Sw119;
  !!SN:W^henchmen_side_0^/y3;
!!en;
!!if&y2>-1;
  !!IF&y2<>-2:Wy2;
  !!VRy4&y2<>-2:Sw119;
  !!SN&y2<>-2:W^henchmen_side_1^/y4;
!!en;

!?FU(OnBattleReplay)&i^henchman_on^=(TRUE);
!!VRv7216:S1;
!!BA:H0/?y1 H1/?y2;
!!if&y1>-1;
  !!IF:Wy1;
  !!SN:W^henchmen_side_0^/?y3;
  !!VRw119&y3=1:S1;
!!en;
!!if&y2>-1;
  !!IF&y2<>-2:Wy2;
  !!SN&y2<>-2:W^henchmen_side_1^/?y4;
  !!VRw119&y2<>-2/y4=1:S1;
!!en;

!?BA53&i^henchman_on^=(TRUE);
!!BA:H0/?y1 H1/?y2;
!!FU(henchman_BattleExpGain)&y1>(NO_HERO):Py1/0;
!!FU(henchman_BattleExpGain)&y2>(NO_HERO):Py2/1;
!!FU(henchman_StackExpLoss)&i^henchman_stackExpTroopMode^=1:P; [lose stack exp when henchman killed if troop mode = TRUE]

!?FU(henchman_BattleExpGain);
!#VA(hero:x) (side:x);
!!HE(hero):E?(heroExpAfter:y)/?(heroLvAfter:y);
!!VR(heroExpGain:y):S(heroExpAfter) -i^heroExpBefore_%(side)^;
!!FU&i^henchman_campaignTransfer^=(TRUE)/(heroExpGain)<=0:E; [Archer - gains 0 exp if the hero didn't gain exp]
!!VR(expVanilla:y):Si^henchman_battleExpStatic^ Ri^henchman_battleExpRandom^; [original exp calculation]

!!VR(heroExpGainFloat:e):S(heroExpGain);[modified by Berserker]
!!FU(Sqrt):P(heroExpGainFloat)/?(scaledHeroExpGainFloat:e);
!!VR(scaledHeroExpGain:y):S(scaledHeroExpGainFloat);
!!VR(heroExpHench:y):S(scaledHeroExpGain) *i^henchman_battleHeroExpCoef^ :100; [percentage of square root of hero exp gain]

!!VR(heroLvHench:y):S(heroLvAfter) *i^henchman_battleExpPerHeroLv^; [hero level multiplier]
!!VR(battleExpGain:y):S(expVanilla) +(heroExpHench) +(heroLvHench); [total exp gain]
!!VR(battleExpGain):Fi^henchman_battleExpMin^/i^henchman_battleExpMax^; [min / max]
!!IF:W(hero);
!!VRw117&w118>=0/w119=1:+(battleExpGain);[total exp]
!!FU(henchman_StackExpGain)&w118>=0/w119=1/i^henchman_stackExpEnabled^=(TRUE):P(hero)/(heroExpGain); [stack exp gain]

!?FU7113&i^henchman_on^=(TRUE);
; if can shoot, but there is no shots (centaurs)
; remove the shooting flag
!!BMx1:F?y1 U3/?y2;
!!VRy1:&4;
!!VRy3&y1=4/y2<1:S1;
!!FU&y3<>1:E;
!!BMx1:F?y4;
!!VRy4:|4 -4;
!!BMx1:Fy4;

!?FU(henchman_LastCreatureCheck);       [Archer - check if heroes without armies is enabled in the game / creature count of a hero]
!!UN:C5102718/4/?y1;                    [check if dismiss last stack is allowed]
!!UN:C5968130/4/?y2;                    [check if transfer last stack is allowed]
!!if|y1<>2114058371/y2<>14844943;       [any value not equal to the original]
  !!VRx2:S0;                            [x2 = 0 if either is enabled]
  !!FU:E;
!!en;
!!VRy5:S0;                              [initialization of creature counter]
!!VRy30:S0;                             [initialization of emissary flag]
!!re i/0/6;                             [check if hero has more than 1 creature]
  !!HEx1:C0/i/?y3/?y4;
  !!if&y4>0;
    !!VRy30|y3=160/y3=161/y3=162/y3=163:S1; [y30 = 1 if there is an emissary]
    !!if&y3>-1/y3<>160/y3<>161/y3<>162/y3<>163/y4>1;
      !!VRx2:S0;                        [x2 = 0 if hero has a stack with more than 1 creature]
      !!FU:E;
    !!en;
  !!en;
  !!VRy5&y3<>160/y3<>161/y3<>162/y3<>163:+y4;
  !!VRx2&y5>1:S0;                       [x2 = 0 if creatures from all slots (except for emissary) > 1]
  !!VRx2&y5>0/y30=1:S0;                 [x2 = 0 if creatuee from all slots > 0 and has an emissary]
  !!FU&y5>1:E;
!!en;
!!VRx2:S1;                              [x2 = 1 if heroes without armies is disabled and hero has only one creature]

!?FU(henchman_BannerInitialization);
!!re i/(HERO_FIRST)/(HERO_LAST_WOG);
  !!VRi^henchman_banner_%i^:S-1;
!!en;

!?FU(henchman_StackExpBF);
!#VA(stack:x) (side:x) (hero:x);
!!BM(stack):T?(mon:y);
!!VR(stackEa:y):S(stack) +1 *-1;    [stack id to stack id for EA receiver (negative)]
!!EA(mon):L?(monExpR10:y) P?(monExpTop:y);
!!VR(monExpR11:y):S(monExpR10) +(monExpTop);

!!HE(hero):O?(owner:y);                 [set up bonus stack exp for AI players]
!!OW:I(owner)/?(type:y);
!!if&(type)=(TRUE);
  !!UN:J2/?(difficulty:y);
  !!VR(mult:y):S(difficulty) +1;
  !!VR(stackExp:y):Si^henchman_stackExp_%(hero)^ *(mult);
!!el;
  !!VR(stackExp):Si^henchman_stackExp_%(hero)^;
!!en;

!!VR(stackExp)|(stackExp)>(monExpR11)/(stackExp)<0:S(monExpR11); [restrain exp]
!!EA(stackEa)&(mon)>(NO_MON):E(stackExp)/2/d/d; [set up stack exp for henchman]
!!EA(stackEa)&i^henchman_bannerEnabled^=(TRUE)/i^henchman_banner_%(hero)^>-1/(mon)>(NO_MON):R(ART_WARLORDS_BANNER)/i^henchman_banner_%(hero)^; [set up henchman's banner]

!?FU(henchman_StackExpGain);
!#VA(hero:x) (heroExpGain:x);
!!IF:W(hero);
!!EAw118:L?(monExpR10:y) P?(monExpTop:y) C?(monCap:y) M?(monMult:y); [get R10 + R11 exp and max exp ratio per battle + multiplier]
!!VR(monExpR11:y):S(monExpR10) +(monExpTop); [true max exp = exp to R11]
!!VR(monExpCap:y):S(monExpR10) *(monCap) :100; [max exp per battle]
!!VR(stackExpGain:y):S(heroExpGain) *(monMult) :1000; [with multipler]
!!if&i^henchman_banner_%(hero)^=5;    [1.5x exp gain / cap when exp banner equipped]
  !!VR(monExpCap): *3 :2;
  !!VR(stackExpGain): *3 :2;
!!en;
!!VR(stackExpGain)&(stackExpGain)>(monExpCap):S(monExpCap); [no more than cap]
!!VRi^henchman_stackExp_%(hero)^:+(stackExpGain); [give exp to henchman]
!!VRi^henchman_stackExp_%(hero)^|i^henchman_stackExp_%(hero)^>(monExpR11)/i^henchman_stackExp_%(hero)^<0:S(monExpR11); [restrain exp]

!?FU(henchman_StackExpLoss);
!!IF:Wi^heroBefore_0^;                  [lose stack exp and banner if killed - attacker]
!!VRi^henchman_stackExp_%i(heroBefore_0)^&w119=0:S0;
!!VRi^henchman_banner_%i(heroBefore_0)^&i^henchman_bannerEnabled^=(TRUE)/w119=0:S-1;
!!if&i^heroBefore_1^>(NO_HERO);         [lose stack exp and banner if killed - defender]
  !!IF:Wi^heroBefore_1^;
  !!VRi^henchman_stackExp_%i(heroBefore_1)^&w119=0:S0;
  !!VRi^henchman_banner_%i(heroBefore_1)^&i^henchman_bannerEnabled^=(TRUE)/w119=0:S-1;
!!en;

!?FU(henchman_RMBMenu);
!#VA(hero:x);
!!IF:W(hero);
!!FU7102&w118<=(NO_MON):P;               [select henchman if no henchman]
!!FU7108&i^henchman_reviveAnywhere^=(TRUE)/w118>(NO_MON)/w119<>(TRUE):P(hero);
!!FU(henchman_BannerChoice)&i^henchman_bannerEnabled^=(TRUE):P(hero);
!!IF&i^henchman_bannerEnabled^<>(TRUE)/i^henchman_reviveAnywhere^<>(TRUE):Q2/-1/-1/1/z149000;  [henchman help]

!?FU(henchman_BannerChoice);
!#VA(hero:x);
!!IF:W(hero);
!!FU&w118<=(NO_MON):E; [exit if no henchman or dead]
!!if&w118>(NO_MON)/w119<>(TRUE);
  !!FU&i^henchman_reviveAnywhere^=(TRUE):E;
  !!SN:T^henchman.strings_%i(henchman_lang).bannerDead^/?z-1;
  !!IF:Q1/(PIC_TYPE_ART)/(ART_WARLORDS_BANNER)/1^%z-1^;
  !!FU:E;
!!en;
!!FU(henchman_BannerToHenchman)&i^henchman_banner_%(hero)^<0:P(hero);
!!FU&i^henchman_banner_%(hero)^<0:E;
!!SN:T^henchman.strings_%i(henchman_lang).bannerTitle^/?z-1 T^henchman.strings_%i(henchman_lang).bannerToHero^/?z-2;
!!VR(last:y):Si^henchman_banner_%(hero)^;[load last choice of henchman's banner]
!!VR(choice:y):S1 Sd<<(last);
!!IF&1000:G1/1/(choice)/-1/125070/125071/125072/125073/125074/125075/125076/125077/125078/-2/125081; [default selection = last choice]
!!FU(IntLog2):Pv1/?(choice);
!!FU(henchman_BannerToHero)&(choice)=9:P(hero);
!!FU|(choice)=9/(choice)=10:E;
!!VRi^henchman_banner_%(hero)^:S(choice);[remember banner's choice]

!?FU(henchman_BannerToHenchman);
!#VA(hero:x);
!!HE(hero):A2/(ART_WARLORDS_BANNER)/?(quantity:y)/?(quantityEquipped:y); [check banner from hero]
!!if&(quantity)>0;                      [if banner is in backpack]
  !!SN:T^henchman.strings_%i(henchman_lang).bannerToHench^/?z-1;
  !!IF:Q1/8/(ART_WARLORDS_BANNER)/2/z-1;[ask to give banner to henchman]
  !!HE(hero)&1:A3/(ART_WARLORDS_BANNER)/1/0;
  !!VRi^henchman_banner_%(hero)^&1:S0;
  !!UN&1:R3/-1;                         [refresh hero screen]
!!el;                                   [if no banner]
  !!SN:T^henchman.strings_%i(henchman_lang).bannerNone^/?z-2;
  !!IF:Q1/(PIC_TYPE_ART)/(ART_WARLORDS_BANNER)/1^%z-2^;
!!en;

!?FU(henchman_BannerToHero);
!#VA(hero:x);
!!HE(hero):A(ART_WARLORDS_BANNER);      [give one banner to hero]
!!VRi^henchman_banner_%(hero)^:S-1;     [remove banner from henchman]
!!UN:R3/(hero);                         [refresh hero screen]

!?FU(henchman_LvCalculation);
!#VA(side:x);
!!if&i^heroBefore_%(side)^<=(NO_HERO);
  !!VRi^henchmanLevel_%(side)^S0;
  !!FU:E;
!!en;
!!HEi^heroBefore_%(side)^:E?(exp:y)/?(lv:y);
!!IF:Wi^heroBefore_%(side)^;
!!if|w118<=(NO_MON)/w119<>1;
  !!VRi^henchmanLevel_%(side)^S0;
  !!FU:E;
!!en;
!!VR(bonusDaily:y):Sc -1 *i^henchman_bonusDaily^;
!!VR(expHench:y):S(lv) -1 *i^henchman_bonusHeroLvUp^ +w117 +(bonusDaily);
!!FU7104:Pw118;
!!VRi^henchmanLevel_%(side)^:S(expHench) :v7215 +1;

!?FU(henchman_Load);
!#VA(hero:x);
!!IF:W(hero);
!!VRw117:Sw51;                          [load henchman exp from w51]
!!VRw118:Sw54;                          [load henchman type from w54]
!!VRw119&w118>(NO_MON):S(TRUE);         [set henchman alive]
!!VRi^henchman_transferred_%(hero)^:S(TRUE); [mark for henchman initialization]

!?FU(henchman_Save);
!!SN:F^IsCampaign^;
!!FU&v1<>(TRUE):E;
!!re i/(HERO_FIRST)/(HERO_LAST_WOG);
  !!HEi:O?(owner:y);
  !!if&(owner)<>(NO_OWNER);
    !!IF:Wi;
    !!VRw51:Sw117;                      [save henchman exp to w51]
    !!VRw54:Sw118;                      [save henchman type to w54]
  !!en;
!!en;

!?FU(henchman_SantaGuards);
!#VA(side:x) (stackHench:x);
!!UN:C42336844/4/?(stacks:y);               [stack quantity of santa guards]
!!VR(stacks):-1;
!!re i/0/(stacks)/1;
  !!VR(stackSantaAdd:y):Si *16 +42013744;
  !!VR(stackGuardAdd:y):S(stackSantaAdd)+4;
  !!UN:C(stackGuardAdd)/4/?(stackGuard:y); [now we have stack ids of guards]
  !!UN:C(stackSantaAdd)/4/?(stackSanta:y); [and the stack ids of santas]
  !!if&(stackSanta)=(stackHench)/(stackGuard)>(NO_STACK); [execute only for Santa henchman]
    !!BM(stackGuard):N?(num:y);
    !!VR(numNew:y):S(num) *i^henchmanLevel_%(side)^;
    !!BM(stackGuard)N(numNew);
  !!en;
!!en;


*** end script ***