ZV_SE2


!#UN:P178/?i^is178^; [Check if Assembling of Combination Artifacts is disabled in WoG Options]


!?FU(Refresh_arts)&i^is178^=0;

*?FU(OnGameEnter)&i^is178^=0;  [Put standart artifact descriptions into global variables]
*?FU(OnAfterErmInstructions)&i^is178^=0;  [Put standart artifact descriptions into global variables]
*!re i/7/128; [From Centaur Axe to Armageddons Blade]
*!re i/7/200; [From Centaur Axe to Armageddons Blade]
  *!SN:H^art^/i/1/?s^artDesc_%i^;
*!en;
!!re i/7/999; [From Centaur Axe to Armageddons Blade]
  !!UN:N0/2/i;
  *!SN:H^art^/i/1/?z2;
  !!SN:K2/?t;
  *!co&t<9;
  !!VRs^artDesc_%i^:Sz2;
  *!SN:H^art^/i/1/?s^artDesc_%i^;
!!en;


!?FU(WOG_CreateERMHook)&i^is178^=0;
!!SN:Ex1/1/5086548/(gem_AfterShowNewArtifactDescription);


!?FU(gem_AfterShowNewArtifactDescription);  [Reset artifact description to basic artifact description]
*!FU:E;
*!re i/7/128; [From Centaur Axe to Armageddons Blade]
!!re i/7/999; [From Centaur Axe to Armageddons Blade]
  *!VRz2:Ss^artDesc_%i^; 
  !!UN:Ai/10/0;
  *!SN:H^art^/i/1/s^artDesc_%i^;
!!en;
*!IF:M^here^;

!?FU(OnHeroScreenMouseClick)&i^is178^=0/i^mouse_action^=(MOUSE_RMB_PRESSED)/i^mouse_item^>=2/i^mouse_item^<=44;
!!FU(Refresh_arts):P;
!!VR(vSlot:y):Si^mouse_item^ -2;
!!HE(CURRENT_HERO):A1/?(artId:y)/(vSlot); [Get the artifact id]  // PROBLEM: ARTS IN THE BACKPACK HAVE ID -1
!!HE(CURRENT_HERO):Z?(heroptr:y);

; If art is in backpack: convert id=-1 into real id
!!if&(artId)=(NO_ART)/(vSlot)>=38/(vSlot)<=42;
  !!VRi:S(vSlot) -38; [38-0; 39-1; 40-2; 41-3; 42-4]
  !!VR(offset:y):Si *8 +468;
  !!UN:C(heroptr)/(offset)/4/?(returnValue:y);
  !!VR(artId):S(returnValue);
!!en;

!!if&(artId)<>(NO_ART)/(artId)<=999;
  !!UN:A(artId)/5/?(ourComboId:y);  [Check if artifact is a part of compound artifact]
  !!if&(ourComboId)<>(NO_ART);
    !!UN:A(ourComboId)/?(comboArtId:y)/d/d;  [Get the id of compound artifact]
    !!FU(NewIntArray):P?(arts:y);  [Define array for art ids]
    *!re i/7/(ART_LAST_WOG);  [Loop all arts]
    !!re i/7/999;  [Loop all arts]
      !!UN:Ai/5/?(combId:y); 
      !!if&(combId)=(ourComboId);  [Find art that matches by id with art is being clicked]
        !!FU(Array_Push):P(arts)/i;  [Push it into array]
      !!en;
    !!en;
  !!en;

  !!FU(gem_LoopArrayAndFormArtDesc):P(arts)/(comboArtId);
!!en;


!?FU(gem_LoopArrayAndFormArtDesc);
!#VA(arrArtId:x) (comboArtId:x);

; Reset variables
!!VR(counter:y):S0;
!!VRs^equippedArts^:S^^;
!!VRs^addArtDesc^:S^^;

!!SN:M(arrArtId)/?(arrSize:y); [get size of types-array]

; Form a string for common artifacts
!!re i/0/(arrSize)/1/-1;
  !!SN:M(arrArtId)/i/?(artId:y);
  *!SN:H^art^/(artId)/0/?(artName:z);
  !!UN:N0/2/(artId); !!VR(artName:z):Sz2;

  !!HE(CURRENT_HERO):A2/(artId)/?y99/?(isEquipped:y);
  !!VR(counter:y)&(isEquipped)>0: +1;
  !!VR(artString:z)&(isEquipped)>0:S^{~LightGreen}%(artName){~}^;
  !!VR(artString:z)&(isEquipped)=0:S^{~Grey}%(artName){~}^;
  !!VRs^equippedArts^: +^%T(wog.endl)%(artString)^;
!!en;

; Form a string for compound artifact and counter
*!SN:H^art^/(comboArtId)/0/?(artName:z);
!!UN:N0/2/(comboArtId); !!VR(artName:z):Sz2;

!!VR(artString:z)&(counter)>0:S^{~LightGreen}%(artName) (%(counter)/%(arrSize)){~}%T(wog.endl)^;
!!VR(artString:z)&(counter)=0:S^{~Grey}%(artName) (%(counter)/%(arrSize)){~}%T(wog.endl)^;

; Form a result string
!!VRs^addArtDesc^:S^%T(wog.endl)%T(wog.endl)%T(wog.endl)%(artString)%s(equippedArts)^;

; Add a result string to default artifact description
!!re i/0/(arrSize)/1/-1;
  !!SN:M(arrArtId)/i/?(artId:y);
  *!SN:H^art^/(artId)/1/^%s(artDesc_%(artId))%s(addArtDesc)^;
  !!VRz2:S^%s(artDesc_%(artId))%s(addArtDesc)^; !!UN:A(artId)/10/z2;
!!en;


** end
