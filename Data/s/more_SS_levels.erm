ZVSE

!?PI;
!!VRz2:S^more_SS_levels.era^;
!!SN:Lz2/?v2;
!!SN:W^more_SS_levels.era^/v2;


!?GM0;
!!VRz2:S^more_SS_levels.era^;
!!SN:Lz2/?v2;
!!SN:W^more_SS_levels.era^/v2;

!?FU(SSL_get);
input
x1 - skill number
x2 - skill level
output
x3 - skill internal int
x4 - skill internal float * 10000
x5 - skill custom int
x6 - skill custom float   * 10000
!!SN:L^more_SS_levels.era^/?y2;   !!IF&y2=0:M^more_SS_levels.era not loaded^; !!FU&y2=0:E;
!!SN:Ay2/^get_SS_table_i^/?y3;    !!SN:Ey3/1/x1/x2;   !!VRx3:Sv1;

!!SN:Ay2/^get_SS_table_f_^/?y4;   !!SN:Ey4/1/x1/x2;   !!VRx4:Sv1;
!_!SN:X9/?y9 X9/v1 X9/?e1 X9/y9; 
!_!VRy44:S10000 *e1; 
!_!VRx4:Sy44;

!!SN:Ay2/^get_SS_table_zi^/?y5;   !!SN:Ey5/1/x1/x2/0;   !!VRx5:Sv1;
!!SN:Ay2/^get_SS_table_zf_^/?y6;  !!SN:Ey6/1/x1/x2/0;   !!VRx6:Sv1;
!_!SN:X9/?y9 X9/v1 X9/?e1 X9/y9; 
!_!VRy66:S10000 *e1; 
!_!VRx6:Sy66;

!_!IF:L^debug SSL_get %X3 %X4 %X5 %X6^;

!?FU(SSL_set);
input
x1 - skill number
x2 - skill level
x3 - value type
x4 - value contents
output
none
!!SN:L^more_SS_levels.era^/?y2;   !!IF&y2=0:M^more_SS_levels.era not loaded^; !!FU&y2=0:E;

!!if&x3=1:;
  !!SN:Ay2/^set_SS_table_i^/?y3;    
  !!SN:Ey3/1/x1/x2/x4;
!!el&x3=2:;
  !!SN:Ay2/^set_SS_table_f^/?y3;
  !!VRe4:Sx4 :10000;
  !!SN:Ey3/1/x1/x2/e4;
!!el&x3=3:;
  !!SN:Ay2/^set_SS_table_zi^/?y3;    
  !!SN:Ey3/1/x1/x2/x4/0;
!!el&x3=4:;
  !!SN:Ay2/^set_SS_table_zf^/?y3;
  !!VRe4:Sx4 :10000;
  !!SN:Ey3/1/x1/x2/e4/0;
!!el:;
  !!IF:M^more_SS_levels.era wrong FU(SSL_set) call^;
!!en:;

!?OB81;
!!SN:W^more_SS_levels.era^/?y88;
!!FU&y88=0:E;

!!SC998:T?y1;
!!FU&y1<>1:E;

!!SC998:S?y2;               [y2 - значение бонуса]
!!HE-1:Sy2/?y3;
!!FU&y3>=15:E;

!!VRy4:Sy2 *16 +16 +1024 +y3 +1;

; Display hint text
!!VRz1:Sz123009;
!!IF&1000:Q1/20/y4/1^%Z1^;
!!HE-1:Sy2/d1;

!!UN:Ov998/v999/v1000;


!?FU(SSL_Max_Mana);
!!SN:L^emerald3_3.era^/?y73;
!!SN:Ay73/^get_max_mana^/?y75;
!!HEx1:Z?y77;
!!SN:Ey75/1/y77;
!!VRx2:Sv1;
